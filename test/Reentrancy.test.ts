import { time, loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { anyValue } from "@nomicfoundation/hardhat-chai-matchers/withArgs";
import { expect } from "chai";
import { ethers } from "hardhat";

import {
  ReentrantWithConsole__factory,
  AttackerWithConsole__factory,
} from "../typechain-types";

describe("Reentrant", function () {
  async function reentrancyFixture() {
    const [owner, hacker] = await ethers.getSigners();

    const reentrant = await new ReentrantWithConsole__factory(owner).deploy();
    await reentrant.deposit({ value: ethers.utils.parseEther("10") });

    return { reentrant, owner, hacker };
  }

  describe("Reentrant hack", function () {
    it("Hacker attack withdraw all funds", async function () {
      const { reentrant, hacker } = await loadFixture(reentrancyFixture);

      // Deploy Attacker
      const attacker = await new AttackerWithConsole__factory(hacker).deploy(
        reentrant.address
      );

      const reentrantBalance = await ethers.provider.getBalance(
        reentrant.address
      );

      await attacker.attack({ value: reentrantBalance });

      const reentrantBalanceAfter = await ethers.provider.getBalance(
        reentrant.address
      );

      expect(reentrantBalanceAfter).to.equal(0);
    });
  });
});
