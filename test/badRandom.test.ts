import { loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { expect } from "chai";
import { ethers } from "hardhat";

import {
  GuessNumber__factory,
  BadRandomAttacker__factory,
} from "../typechain-types";

describe("BadRandom", function () {
  async function BadRandomFixture() {
    const [owner, hacker] = await ethers.getSigners();

    const minBid = ethers.utils.parseEther("10");

    const guessNumber = await new GuessNumber__factory(owner).deploy(minBid, {
      value: minBid.mul(5),
    });

    return { guessNumber, owner, hacker, minBid };
  }

  it("BadRandom hack", async function () {
    const { guessNumber, hacker, minBid } = await loadFixture(BadRandomFixture);

    await new BadRandomAttacker__factory(hacker).deploy(guessNumber.address, {
      value: minBid,
      gasLimit: 30000000,
    });

    const balanceAfter = await ethers.provider.getBalance(guessNumber.address);

    expect(balanceAfter).to.equal(0);
  });
});
