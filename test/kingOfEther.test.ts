import { loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { expect } from "chai";
import { ethers } from "hardhat";

import { King__factory, KingAttacker__factory } from "../typechain-types";

describe("King DoS", function () {
  async function BadRandomFixture() {
    const [owner, hacker] = await ethers.getSigners();

    const minBid = ethers.utils.parseEther("10");

    const king = await new King__factory(owner).deploy({
      value: minBid,
    });

    return { king, owner, hacker, minBid };
  }

  it("After attack nobody will can retake ", async function () {
    const { king, hacker, minBid, owner } = await loadFixture(BadRandomFixture);

    await new KingAttacker__factory(hacker).deploy(king.address, {
      value: minBid,
    });

    const tx = { to: king.address, value: minBid.add(1) };
    await expect(owner.sendTransaction(tx)).to.be.reverted;
  });
});
